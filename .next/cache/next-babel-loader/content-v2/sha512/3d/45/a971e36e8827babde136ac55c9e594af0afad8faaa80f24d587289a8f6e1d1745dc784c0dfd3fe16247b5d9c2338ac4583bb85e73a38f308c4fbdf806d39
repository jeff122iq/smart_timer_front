{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/cubex/projects/cards/smart_timer_front/components/Tags.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useEffect, useState } from \"react\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport { makeStyles, withStyles, createStyles } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { observer } from \"mobx-react\";\nimport { TagsStore } from \"../store/tagsStore\";\nconst CustomAutocomplete = withStyles({\n  // inputFocused: {\n  //   '&:focus': {\n  //     border: '1px solid red'\n  //   }\n  // },\n  // input: {\n  //   '&:hover': {\n  //     borderBottom: '5px solid red'\n  //   }\n  // },\n  tag: {\n    background: \"#347cff\",\n    color: \"#fff\",\n    borderRadius: \"4px\",\n    position: \"relative\",\n    zIndex: 0,\n    \"& .MuiChip-label\": {\n      color: \"#fff\"\n    },\n    \"& .MuiChip-deleteIcon\": {\n      color: \"#fff\"\n    }\n  }\n})(Autocomplete);\nconst useStyles = makeStyles(theme => createStyles({\n  root: {\n    width: \"100%\",\n    boxShadow: \"-1px 2px 6px 0px rgba(0,0,0,0.2)\",\n    borderRadius: \"4px\",\n    \"&:focus\": {\n      border: \"1px solid red\"\n    }\n  },\n  input: {\n    border: \"none\"\n  },\n  autocomplete: {\n    background: 'white',\n    \"&:focus\": {\n      border: \"1px solid red\"\n    }\n  },\n  underline: {\n    \"&&&:before\": {\n      borderBottom: \"none\"\n    },\n    \"&&:after\": {\n      borderBottom: \"none\"\n    }\n  },\n  textField: {\n    border: \"none\"\n  }\n}));\n\nconst LimitTags = () => {\n  const classes = useStyles();\n  const {\n    getTags\n  } = TagsStore;\n  const {\n    0: tags,\n    1: setTags\n  } = useState([]);\n  console.log(\"TAGS\", tags);\n  useEffect(() => {\n    getTags(tags);\n  }, [tags]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: /*#__PURE__*/_jsxDEV(CustomAutocomplete, {\n      className: classes.autocomplete,\n      onChange: (event, value) => {\n        setTags(value);\n        console.log(value);\n      },\n      multiple: true // classes={classes}\n      // limitTags={2}\n      ,\n      options: top100Films,\n      getOptionLabel: option => option.title,\n      defaultValue: [],\n      renderInput: params => /*#__PURE__*/_jsxDEV(TextField, _objectSpread(_objectSpread({}, params), {}, {\n        className: classes.textField\n      }), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 39\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n}; // Top 100 films as rated by IMDb users. http://www.imdb.com/chart/top\n\n\nconst top100Films = [{\n  title: \"The Shawshank Redemption\",\n  year: 1994\n}, {\n  title: \"The Godfather\",\n  year: 1972\n}, {\n  title: \"The Godfather: Part II\",\n  year: 1974\n}, {\n  title: \"The Dark Knight\",\n  year: 2008\n}, {\n  title: \"12 Angry Men\",\n  year: 1957\n}, {\n  title: \"Schindler's List\",\n  year: 1993\n}, {\n  title: \"Pulp Fiction\",\n  year: 1994\n}, {\n  title: \"The Lord of the Rings: The Return of the King\",\n  year: 2003\n}, {\n  title: \"The Good, the Bad and the Ugly\",\n  year: 1966\n}, {\n  title: \"Fight Club\",\n  year: 1999\n}, {\n  title: \"The Lord of the Rings: The Fellowship of the Ring\",\n  year: 2001\n}, {\n  title: \"Star Wars: Episode V - The Empire Strikes Back\",\n  year: 1980\n}, {\n  title: \"Forrest Gump\",\n  year: 1994\n}, {\n  title: \"Inception\",\n  year: 2010\n}, {\n  title: \"The Lord of the Rings: The Two Towers\",\n  year: 2002\n}, {\n  title: \"One Flew Over the Cuckoo's Nest\",\n  year: 1975\n}, {\n  title: \"Goodfellas\",\n  year: 1990\n}, {\n  title: \"The Matrix\",\n  year: 1999\n}, {\n  title: \"Seven Samurai\",\n  year: 1954\n}, {\n  title: \"Star Wars: Episode IV - A New Hope\",\n  year: 1977\n}, {\n  title: \"City of God\",\n  year: 2002\n}, {\n  title: \"Se7en\",\n  year: 1995\n}, {\n  title: \"The Silence of the Lambs\",\n  year: 1991\n}, {\n  title: \"It's a Wonderful Life\",\n  year: 1946\n}, {\n  title: \"Life Is Beautiful\",\n  year: 1997\n}, {\n  title: \"The Usual Suspects\",\n  year: 1995\n}, {\n  title: \"Léon: The Professional\",\n  year: 1994\n}, {\n  title: \"Spirited Away\",\n  year: 2001\n}, {\n  title: \"Saving Private Ryan\",\n  year: 1998\n}, {\n  title: \"Once Upon a Time in the West\",\n  year: 1968\n}, {\n  title: \"American History X\",\n  year: 1998\n}, {\n  title: \"Interstellar\",\n  year: 2014\n}, {\n  title: \"Casablanca\",\n  year: 1942\n}, {\n  title: \"City Lights\",\n  year: 1931\n}, {\n  title: \"Psycho\",\n  year: 1960\n}, {\n  title: \"The Green Mile\",\n  year: 1999\n}, {\n  title: \"The Intouchables\",\n  year: 2011\n}, {\n  title: \"Modern Times\",\n  year: 1936\n}, {\n  title: \"Raiders of the Lost Ark\",\n  year: 1981\n}, {\n  title: \"Rear Window\",\n  year: 1954\n}, {\n  title: \"The Pianist\",\n  year: 2002\n}, {\n  title: \"The Departed\",\n  year: 2006\n}, {\n  title: \"Terminator 2: Judgment Day\",\n  year: 1991\n}, {\n  title: \"Back to the Future\",\n  year: 1985\n}, {\n  title: \"Whiplash\",\n  year: 2014\n}, {\n  title: \"Gladiator\",\n  year: 2000\n}, {\n  title: \"Memento\",\n  year: 2000\n}, {\n  title: \"The Prestige\",\n  year: 2006\n}, {\n  title: \"The Lion King\",\n  year: 1994\n}, {\n  title: \"Apocalypse Now\",\n  year: 1979\n}, {\n  title: \"Alien\",\n  year: 1979\n}, {\n  title: \"Sunset Boulevard\",\n  year: 1950\n}, {\n  title: \"Dr. Strangelove or: How I Learned to Stop Worrying and Love the Bomb\",\n  year: 1964\n}, {\n  title: \"The Great Dictator\",\n  year: 1940\n}, {\n  title: \"Cinema Paradiso\",\n  year: 1988\n}, {\n  title: \"The Lives of Others\",\n  year: 2006\n}, {\n  title: \"Grave of the Fireflies\",\n  year: 1988\n}, {\n  title: \"Paths of Glory\",\n  year: 1957\n}, {\n  title: \"Django Unchained\",\n  year: 2012\n}, {\n  title: \"The Shining\",\n  year: 1980\n}, {\n  title: \"WALL·E\",\n  year: 2008\n}, {\n  title: \"American Beauty\",\n  year: 1999\n}, {\n  title: \"The Dark Knight Rises\",\n  year: 2012\n}, {\n  title: \"Princess Mononoke\",\n  year: 1997\n}, {\n  title: \"Aliens\",\n  year: 1986\n}, {\n  title: \"Oldboy\",\n  year: 2003\n}, {\n  title: \"Once Upon a Time in America\",\n  year: 1984\n}, {\n  title: \"Witness for the Prosecution\",\n  year: 1957\n}, {\n  title: \"Das Boot\",\n  year: 1981\n}, {\n  title: \"Citizen Kane\",\n  year: 1941\n}, {\n  title: \"North by Northwest\",\n  year: 1959\n}, {\n  title: \"Vertigo\",\n  year: 1958\n}, {\n  title: \"Star Wars: Episode VI - Return of the Jedi\",\n  year: 1983\n}, {\n  title: \"Reservoir Dogs\",\n  year: 1992\n}, {\n  title: \"Braveheart\",\n  year: 1995\n}, {\n  title: \"M\",\n  year: 1931\n}, {\n  title: \"Requiem for a Dream\",\n  year: 2000\n}, {\n  title: \"Amélie\",\n  year: 2001\n}, {\n  title: \"A Clockwork Orange\",\n  year: 1971\n}, {\n  title: \"Like Stars on Earth\",\n  year: 2007\n}, {\n  title: \"Taxi Driver\",\n  year: 1976\n}, {\n  title: \"Lawrence of Arabia\",\n  year: 1962\n}, {\n  title: \"Double Indemnity\",\n  year: 1944\n}, {\n  title: \"Eternal Sunshine of the Spotless Mind\",\n  year: 2004\n}, {\n  title: \"Amadeus\",\n  year: 1984\n}, {\n  title: \"To Kill a Mockingbird\",\n  year: 1962\n}, {\n  title: \"Toy Story 3\",\n  year: 2010\n}, {\n  title: \"Logan\",\n  year: 2017\n}, {\n  title: \"Full Metal Jacket\",\n  year: 1987\n}, {\n  title: \"Dangal\",\n  year: 2016\n}, {\n  title: \"The Sting\",\n  year: 1973\n}, {\n  title: \"2001: A Space Odyssey\",\n  year: 1968\n}, {\n  title: \"Singin' in the Rain\",\n  year: 1952\n}, {\n  title: \"Toy Story\",\n  year: 1995\n}, {\n  title: \"Bicycle Thieves\",\n  year: 1948\n}, {\n  title: \"The Kid\",\n  year: 1921\n}, {\n  title: \"Inglourious Basterds\",\n  year: 2009\n}, {\n  title: \"Snatch\",\n  year: 2000\n}, {\n  title: \"3 Idiots\",\n  year: 2009\n}, {\n  title: \"Monty Python and the Holy Grail\",\n  year: 1975\n}];\nexport default observer(LimitTags);","map":{"version":3,"sources":["/home/cubex/projects/cards/smart_timer_front/components/Tags.tsx"],"names":["React","useEffect","useState","Autocomplete","makeStyles","withStyles","createStyles","TextField","observer","TagsStore","CustomAutocomplete","tag","background","color","borderRadius","position","zIndex","useStyles","theme","root","width","boxShadow","border","input","autocomplete","underline","borderBottom","textField","LimitTags","classes","getTags","tags","setTags","console","log","event","value","top100Films","option","title","params","year"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport { makeStyles, withStyles, createStyles, Theme } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { observer } from \"mobx-react\";\n\nimport { TagsStore } from \"../store/tagsStore\";\nimport { tags } from \"../interface/tags\";\n\nconst CustomAutocomplete = withStyles({\n  // inputFocused: {\n  //   '&:focus': {\n  //     border: '1px solid red'\n  //   }\n  // },\n  // input: {\n  //   '&:hover': {\n  //     borderBottom: '5px solid red'\n  //   }\n  // },\n  tag: {\n    background: \"#347cff\",\n    color: \"#fff\",\n    borderRadius: \"4px\",\n    position: \"relative\",\n    zIndex: 0,\n    \"& .MuiChip-label\": {\n      color: \"#fff\",\n    },\n    \"& .MuiChip-deleteIcon\": {\n      color: \"#fff\",\n    },\n  },\n})(Autocomplete);\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      width: \"100%\",\n      boxShadow: \"-1px 2px 6px 0px rgba(0,0,0,0.2)\",\n      borderRadius: \"4px\",\n      \"&:focus\": {\n        border: \"1px solid red\",\n      },\n    },\n    input: {\n      border: \"none\",\n    },\n    autocomplete: {\n      background:'white',\n      \"&:focus\": {\n        border: \"1px solid red\",\n      },\n    },\n    underline: {\n      \"&&&:before\": {\n        borderBottom: \"none\",\n      },\n      \"&&:after\": {\n        borderBottom: \"none\",\n      },\n    },\n    textField: {\n      border: \"none\",\n    },\n  })\n);\n\nconst LimitTags = () => {\n  const classes = useStyles();\n  const { getTags } = TagsStore;\n  const [tags, setTags] = useState([]);\n  console.log(\"TAGS\", tags);\n\n  useEffect(() => {\n    getTags(tags);\n  }, [tags]);\n\n  return (\n    <div className={classes.root}>\n      <CustomAutocomplete\n        className={classes.autocomplete}\n        onChange={(event, value: any) => {\n          setTags(value);\n          console.log(value);\n        }}\n        multiple\n        // classes={classes}\n        // limitTags={2}\n        options={top100Films}\n        getOptionLabel={(option: any) => option.title}\n        defaultValue={[]}\n        renderInput={(params: any) => <TextField {...params} className={classes.textField} />}\n      />\n    </div>\n  );\n};\n\n// Top 100 films as rated by IMDb users. http://www.imdb.com/chart/top\nconst top100Films = [\n  { title: \"The Shawshank Redemption\", year: 1994 },\n  { title: \"The Godfather\", year: 1972 },\n  { title: \"The Godfather: Part II\", year: 1974 },\n  { title: \"The Dark Knight\", year: 2008 },\n  { title: \"12 Angry Men\", year: 1957 },\n  { title: \"Schindler's List\", year: 1993 },\n  { title: \"Pulp Fiction\", year: 1994 },\n  { title: \"The Lord of the Rings: The Return of the King\", year: 2003 },\n  { title: \"The Good, the Bad and the Ugly\", year: 1966 },\n  { title: \"Fight Club\", year: 1999 },\n  { title: \"The Lord of the Rings: The Fellowship of the Ring\", year: 2001 },\n  { title: \"Star Wars: Episode V - The Empire Strikes Back\", year: 1980 },\n  { title: \"Forrest Gump\", year: 1994 },\n  { title: \"Inception\", year: 2010 },\n  { title: \"The Lord of the Rings: The Two Towers\", year: 2002 },\n  { title: \"One Flew Over the Cuckoo's Nest\", year: 1975 },\n  { title: \"Goodfellas\", year: 1990 },\n  { title: \"The Matrix\", year: 1999 },\n  { title: \"Seven Samurai\", year: 1954 },\n  { title: \"Star Wars: Episode IV - A New Hope\", year: 1977 },\n  { title: \"City of God\", year: 2002 },\n  { title: \"Se7en\", year: 1995 },\n  { title: \"The Silence of the Lambs\", year: 1991 },\n  { title: \"It's a Wonderful Life\", year: 1946 },\n  { title: \"Life Is Beautiful\", year: 1997 },\n  { title: \"The Usual Suspects\", year: 1995 },\n  { title: \"Léon: The Professional\", year: 1994 },\n  { title: \"Spirited Away\", year: 2001 },\n  { title: \"Saving Private Ryan\", year: 1998 },\n  { title: \"Once Upon a Time in the West\", year: 1968 },\n  { title: \"American History X\", year: 1998 },\n  { title: \"Interstellar\", year: 2014 },\n  { title: \"Casablanca\", year: 1942 },\n  { title: \"City Lights\", year: 1931 },\n  { title: \"Psycho\", year: 1960 },\n  { title: \"The Green Mile\", year: 1999 },\n  { title: \"The Intouchables\", year: 2011 },\n  { title: \"Modern Times\", year: 1936 },\n  { title: \"Raiders of the Lost Ark\", year: 1981 },\n  { title: \"Rear Window\", year: 1954 },\n  { title: \"The Pianist\", year: 2002 },\n  { title: \"The Departed\", year: 2006 },\n  { title: \"Terminator 2: Judgment Day\", year: 1991 },\n  { title: \"Back to the Future\", year: 1985 },\n  { title: \"Whiplash\", year: 2014 },\n  { title: \"Gladiator\", year: 2000 },\n  { title: \"Memento\", year: 2000 },\n  { title: \"The Prestige\", year: 2006 },\n  { title: \"The Lion King\", year: 1994 },\n  { title: \"Apocalypse Now\", year: 1979 },\n  { title: \"Alien\", year: 1979 },\n  { title: \"Sunset Boulevard\", year: 1950 },\n  { title: \"Dr. Strangelove or: How I Learned to Stop Worrying and Love the Bomb\", year: 1964 },\n  { title: \"The Great Dictator\", year: 1940 },\n  { title: \"Cinema Paradiso\", year: 1988 },\n  { title: \"The Lives of Others\", year: 2006 },\n  { title: \"Grave of the Fireflies\", year: 1988 },\n  { title: \"Paths of Glory\", year: 1957 },\n  { title: \"Django Unchained\", year: 2012 },\n  { title: \"The Shining\", year: 1980 },\n  { title: \"WALL·E\", year: 2008 },\n  { title: \"American Beauty\", year: 1999 },\n  { title: \"The Dark Knight Rises\", year: 2012 },\n  { title: \"Princess Mononoke\", year: 1997 },\n  { title: \"Aliens\", year: 1986 },\n  { title: \"Oldboy\", year: 2003 },\n  { title: \"Once Upon a Time in America\", year: 1984 },\n  { title: \"Witness for the Prosecution\", year: 1957 },\n  { title: \"Das Boot\", year: 1981 },\n  { title: \"Citizen Kane\", year: 1941 },\n  { title: \"North by Northwest\", year: 1959 },\n  { title: \"Vertigo\", year: 1958 },\n  { title: \"Star Wars: Episode VI - Return of the Jedi\", year: 1983 },\n  { title: \"Reservoir Dogs\", year: 1992 },\n  { title: \"Braveheart\", year: 1995 },\n  { title: \"M\", year: 1931 },\n  { title: \"Requiem for a Dream\", year: 2000 },\n  { title: \"Amélie\", year: 2001 },\n  { title: \"A Clockwork Orange\", year: 1971 },\n  { title: \"Like Stars on Earth\", year: 2007 },\n  { title: \"Taxi Driver\", year: 1976 },\n  { title: \"Lawrence of Arabia\", year: 1962 },\n  { title: \"Double Indemnity\", year: 1944 },\n  { title: \"Eternal Sunshine of the Spotless Mind\", year: 2004 },\n  { title: \"Amadeus\", year: 1984 },\n  { title: \"To Kill a Mockingbird\", year: 1962 },\n  { title: \"Toy Story 3\", year: 2010 },\n  { title: \"Logan\", year: 2017 },\n  { title: \"Full Metal Jacket\", year: 1987 },\n  { title: \"Dangal\", year: 2016 },\n  { title: \"The Sting\", year: 1973 },\n  { title: \"2001: A Space Odyssey\", year: 1968 },\n  { title: \"Singin' in the Rain\", year: 1952 },\n  { title: \"Toy Story\", year: 1995 },\n  { title: \"Bicycle Thieves\", year: 1948 },\n  { title: \"The Kid\", year: 1921 },\n  { title: \"Inglourious Basterds\", year: 2009 },\n  { title: \"Snatch\", year: 2000 },\n  { title: \"3 Idiots\", year: 2009 },\n  { title: \"Monty Python and the Holy Grail\", year: 1975 },\n];\n\nexport default observer(LimitTags);\n"]},"metadata":{},"sourceType":"module"}