{"ast":null,"code":"var _class, _descriptor, _descriptor2, _descriptor3, _temp;\n\nfunction _initializerDefineProperty(target, property, descriptor, context) { if (!descriptor) return; Object.defineProperty(target, property, { enumerable: descriptor.enumerable, configurable: descriptor.configurable, writable: descriptor.writable, value: descriptor.initializer ? descriptor.initializer.call(context) : void 0 }); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }\n\nfunction _initializerWarningHelper(descriptor, context) { throw new Error('Decorating class property failed. Please ensure that ' + 'proposal-class-properties is enabled and runs after the decorators transform.'); }\n\nimport { observable, makeObservable, action } from \"mobx\";\nvar tagsStore = (_class = (_temp = function tagsStore() {\n  _classCallCheck(this, tagsStore);\n\n  _initializerDefineProperty(this, \"tag\", _descriptor, this);\n\n  _initializerDefineProperty(this, \"tagLength\", _descriptor2, this);\n\n  _initializerDefineProperty(this, \"getTags\", _descriptor3, this);\n\n  makeObservable(this);\n}, _temp), (_descriptor = _applyDecoratedDescriptor(_class.prototype, \"tag\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return [];\n  }\n}), _descriptor2 = _applyDecoratedDescriptor(_class.prototype, \"tagLength\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return false;\n  }\n}), _descriptor3 = _applyDecoratedDescriptor(_class.prototype, \"getTags\", [action], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    var _this = this;\n\n    return function (tags) {\n      tags.map(function (tag) {\n        _this.tag.push(tag);\n      });\n      console.log('TAGS STORE', _this.tag.length);\n\n      if (_this.tag.length > 0) {\n        _this.tagLength = true;\n      }\n    };\n  }\n})), _class);\nexport var TagsStore = new tagsStore();","map":{"version":3,"sources":["/home/cubex/projects/cards/smart_timer_front/store/tagsStore.ts"],"names":["observable","makeObservable","action","tagsStore","tags","map","tag","push","console","log","length","tagLength","TagsStore"],"mappings":";;;;;;;;;;AACA,SAASA,UAAT,EAAqBC,cAArB,EAAqCC,MAArC,QAAmD,MAAnD;IAEMC,S,sBACF,qBAAc;AAAA;;AAAA;;AAAA;;AAAA;;AACVF,EAAAA,cAAc,CAAC,IAAD,CAAd;AACH,C,6EACAD,U;;;;;WAAyB,E;;6EACzBA,U;;;;;WAAgC,K;;2EAEhCE,M;;;;;;;WAAiB,UAACE,IAAD,EAAe;AAC7BA,MAAAA,IAAI,CAACC,GAAL,CAAS,UAACC,GAAD,EAAc;AACnB,QAAA,KAAI,CAACA,GAAL,CAASC,IAAT,CAAcD,GAAd;AACH,OAFD;AAGAE,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0B,KAAI,CAACH,GAAL,CAASI,MAAnC;;AACA,UAAG,KAAI,CAACJ,GAAL,CAASI,MAAT,GAAkB,CAArB,EAAwB;AACpB,QAAA,KAAI,CAACC,SAAL,GAAiB,IAAjB;AACH;AACJ,K;;;AAIL,OAAO,IAAMC,SAAS,GAAG,IAAIT,SAAJ,EAAlB","sourcesContent":["import { tags } from '../interface/tags';\nimport { observable, makeObservable, action } from \"mobx\";\n\nclass tagsStore {\n    constructor() {\n        makeObservable(this)\n    }\n    @observable tag: tags[] = []\n    @observable tagLength: boolean = false;\n\n    @action getTags = (tags: any) => {\n        tags.map((tag: any) => {\n            this.tag.push(tag)\n        })\n        console.log('TAGS STORE', this.tag.length)\n        if(this.tag.length > 0) {\n            this.tagLength = true;\n        }\n    }\n\n}\n\nexport const TagsStore = new tagsStore();\n"]},"metadata":{},"sourceType":"module"}